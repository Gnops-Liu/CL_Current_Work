// This file has been automatically generated by the pattern compiler.
// DO NOT EDIT!

#ifndef MAGNUM2
#define MAGNUM2
#endif 

#define PATCOM_OUTPUT
#include "tester.h"
#include "subroutine_MAG2.h"

#ifndef PATTERN_INSTRUCTION
#error PATTERN_INSTRUCTION not #defined ("tester.h" should not have "#pragma once").
#endif



/************ pattern "SUB_GPIB5_send_A_Byte" ************/

PATTERN_INITIAL_CONDITIONS( SUB_GPIB5_send_A_Byte )   /* C Code to set initial conditions */
{
}

PATTERN_INSTRUCTIONS( SUB_GPIB5_send_A_Byte )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x00010000,0x00000805,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x00010000,0x00000804,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x00010000,0x00000803,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x00010000,0x00000802,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x00010000,0x00000801,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000016,0x00000018,0x00000000,0x00000000,0x00010000,0x00000800,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x0038000E,0x00000016,0x00000000,0x00000000,0x00010000,0x00000807,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x0038000E,0x00000020,0x00000000,0x00010080,0x00000000,0x00000000,0x34043400,0x000010D0)
}

PATTERN_MAR_RELOC_UINSTS( SUB_GPIB5_send_A_Byte )   /* Microinstructions that need MAR address relocated */
{
	PATTERN_MAR_RELOC_UINST( 7 )
}

PATTERN_MAR_FUNCB_UINSTS( SUB_GPIB5_send_A_Byte )   /* Instructions requiring MAR_FUNCB fixup */
{
	PATTERN_MAR_FUNCB_UINST( 7, SUB_GPIB5_send_A_Byte, 7 )
}

PATTERN_VERSIONS( SUB_GPIB5_send_A_Byte )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( SUB_GPIB5_send_A_Byte )   /* TSETS used by this pattern */
{
	PATTERN_USED_TSET( TSET1 )
}

PATTERN_USED_VIHHS( SUB_GPIB5_send_A_Byte )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( SUB_GPIB5_send_A_Byte )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( SUB_GPIB5_send_A_Byte )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 2 )
}

PATTERN( SUB_GPIB5_send_A_Byte )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( SUB_GPIB5_send_A_Byte )
	INSTRUCTIONS( SUB_GPIB5_send_A_Byte )
	MAR_RELOC_UINSTS( SUB_GPIB5_send_A_Byte )
	MAR_FUNCB_UINSTS( SUB_GPIB5_send_A_Byte )
	VERSIONS( SUB_GPIB5_send_A_Byte )
	USED_TSETS( SUB_GPIB5_send_A_Byte )
	USED_VIHHS( SUB_GPIB5_send_A_Byte )
	ATTRIBUTES( SUB_GPIB5_send_A_Byte )
	HW_REQUIREMENTS( SUB_GPIB5_send_A_Byte )
}



/************ pattern "SUB_GPIB5_read_A_Byte" ************/

PATTERN_INITIAL_CONDITIONS( SUB_GPIB5_read_A_Byte )   /* C Code to set initial conditions */
{
}

PATTERN_INSTRUCTIONS( SUB_GPIB5_read_A_Byte )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000805,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000804,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000803,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000802,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000801,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000016,0x00000018,0x00000000,0x00000000,0x000100A0,0x00000800,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000016,0x00000000,0x00000000,0x000100A0,0x00000807,0x00000000,0x34043400,0x000010D0)
}

PATTERN_VERSIONS( SUB_GPIB5_read_A_Byte )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( SUB_GPIB5_read_A_Byte )   /* TSETS used by this pattern */
{
	PATTERN_USED_TSET( TSET1 )
}

PATTERN_USED_VIHHS( SUB_GPIB5_read_A_Byte )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( SUB_GPIB5_read_A_Byte )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( SUB_GPIB5_read_A_Byte )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 2 )
}

PATTERN( SUB_GPIB5_read_A_Byte )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( SUB_GPIB5_read_A_Byte )
	INSTRUCTIONS( SUB_GPIB5_read_A_Byte )
	VERSIONS( SUB_GPIB5_read_A_Byte )
	USED_TSETS( SUB_GPIB5_read_A_Byte )
	USED_VIHHS( SUB_GPIB5_read_A_Byte )
	ATTRIBUTES( SUB_GPIB5_read_A_Byte )
	HW_REQUIREMENTS( SUB_GPIB5_read_A_Byte )
}



/************ pattern "SUB_WaitFor_CRC" ************/

PATTERN_INITIAL_CONDITIONS( SUB_WaitFor_CRC )   /* C Code to set initial conditions */
{
	dmain(0);
}

PATTERN_INSTRUCTIONS( SUB_WaitFor_CRC )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x0000900C,0x00100009,0x00000000,0x0A000000,0x000180C0,0x00000007,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00009018,0x0000000C,0x00000000,0x08000000,0x000100C0,0x00000007,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000807,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000800,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000801,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000802,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000803,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000804,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x40010082,0x00000805,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000016,0x00000018,0x00000000,0x00000000,0x40010082,0x00000806,0x00000000,0x34043400,0x000010D0)
	/* 10 */
	PATTERN_INSTRUCTION(0x00000018,0x00000016,0x00000000,0x00000000,0x00010000,0x00000000,0x00000000,0x34043400,0x000010D0)
}

PATTERN_LABELS( SUB_WaitFor_CRC )   /* List of all labels with their associated microinstructions */
{
	PATTERN_LABEL( 0, "label1" )
	PATTERN_LABEL( 2, "label2" )
}

PATTERN_MAR_RELOC_UINSTS( SUB_WaitFor_CRC )   /* Microinstructions that need MAR address relocated */
{
	PATTERN_MAR_RELOC_UINST( 0 )
	PATTERN_MAR_RELOC_UINST( 1 )
}

PATTERN_MAR_FUNCB_UINSTS( SUB_WaitFor_CRC )   /* Instructions requiring MAR_FUNCB fixup */
{
	PATTERN_MAR_FUNCB_UINST( 0, SUB_WaitFor_CRC, 2 )
	PATTERN_MAR_FUNCB_UINST( 1, SUB_WaitFor_CRC, 0 )
}

PATTERN_COUNTER_UINSTS( SUB_WaitFor_CRC )   /* Instructions requiring Counter func/addr fixup */
{
	PATTERN_COUNTER_UINST( 0, SUB_WaitFor_CRC, 2 )
	PATTERN_COUNTER_UINST( 1, SUB_WaitFor_CRC, 0 )
}

PATTERN_VERSIONS( SUB_WaitFor_CRC )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( SUB_WaitFor_CRC )   /* TSETS used by this pattern */
{
	PATTERN_USED_TSET( TSET1 )
}

PATTERN_USED_VIHHS( SUB_WaitFor_CRC )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( SUB_WaitFor_CRC )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( SUB_WaitFor_CRC )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 2 )
}

PATTERN( SUB_WaitFor_CRC )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( SUB_WaitFor_CRC )
	INSTRUCTIONS( SUB_WaitFor_CRC )
	LABELS( SUB_WaitFor_CRC )
	MAR_RELOC_UINSTS( SUB_WaitFor_CRC )
	MAR_FUNCB_UINSTS( SUB_WaitFor_CRC )
	COUNTER_UINSTS( SUB_WaitFor_CRC )
	VERSIONS( SUB_WaitFor_CRC )
	USED_TSETS( SUB_WaitFor_CRC )
	USED_VIHHS( SUB_WaitFor_CRC )
	ATTRIBUTES( SUB_WaitFor_CRC )
	HW_REQUIREMENTS( SUB_WaitFor_CRC )
}



/************ pattern "SUB_read_CRC" ************/

PATTERN_INITIAL_CONDITIONS( SUB_read_CRC )   /* C Code to set initial conditions */
{
}

PATTERN_INSTRUCTIONS( SUB_read_CRC )   /* Microcode */
{
	/* 0 */
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000805,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000804,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000803,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000802,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000801,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000016,0x00000018,0x00000000,0x00000000,0x400100A2,0x00000800,0x00000000,0x34043400,0x000010D0)
	PATTERN_INSTRUCTION(0x00000018,0x00000016,0x00000000,0x00000000,0x400100A2,0x00000807,0x00000000,0x34043400,0x000010D0)
}

PATTERN_VERSIONS( SUB_read_CRC )   /* Version of the compiler output */
{
	PATTERN_VERSION( PATTERN_VAR_GOSUB, 1 )
}

PATTERN_USED_TSETS( SUB_read_CRC )   /* TSETS used by this pattern */
{
	PATTERN_USED_TSET( TSET1 )
}

PATTERN_USED_VIHHS( SUB_read_CRC )   /* VIHH used by this pattern */
{
	PATTERN_USED_VIHH( VIHH1 )
}

PATTERN_ATTRIBUTES( SUB_read_CRC )   /* Pattern attributes */
{
	PATTERN_ATTRIBUTE( MEM )
	PATTERN_ATTRIBUTE( SINGLE )
}

PATTERN_HW_REQUIREMENTS( SUB_read_CRC )   /* Hardware requirements */
{
	PATTERN_HW_REQUIREMENT( mag, 2 )
}

PATTERN( SUB_read_CRC )   /* Process the pattern specific information */
{
	INITIAL_CONDITIONS( SUB_read_CRC )
	INSTRUCTIONS( SUB_read_CRC )
	VERSIONS( SUB_read_CRC )
	USED_TSETS( SUB_read_CRC )
	USED_VIHHS( SUB_read_CRC )
	ATTRIBUTES( SUB_read_CRC )
	HW_REQUIREMENTS( SUB_read_CRC )
}
